neuroGrape - опит за апроксимиране оценката на програмата Grapefruit с
изкуствена невронна мрежа с обратно разпространение на грешката

Grapefruit е шахматна програма с отворен код поддържаща UCI протокола
(http://en.wikipedia.org/wiki/Universal_Chess_Interface). Grapefruit е
модификация на Toga, която пък е модификация от Fruit. Актуална
информация за тези програми и вариациите им може да се види на
http://www.computerchess.info/tdbb/phpBB3/viewforum.php?f=9

grapeLog е модификация на Grapefruit, която по време на игра записва
множеството позиции (във FEN нотация
http://en.wikipedia.org/wiki/Forsyth-Edwards_Notation), които са
оценявани, заедно със съответните оценки от оригиналния алгоритъм на
Grapefruit в множество файлове. За коректно действие е необходимо
наличие на папка logs в директорията, в която се намира
grapeLog. Информацията събрана в тази папка (множество от .log
файлове) се използва за обучение.

nTrain (neuroTrainer) е графичен интерфейс, осъществяващ манипулиране
на невронни мрежи с обратно разпространение на грешката.  Train
directory задава директория, от която ще се използват .log файлове за
трениране или оценяване.  Convert train files осъществява конвертиране
на .log файлове в .bpnl файлове. По-конкретно FEN нотацията се кодира
в 262 бита + число оценка на позицията с цел спестяване на време при
трениране или оценяване на мрежа. Това конвертиране е опционно (и не
дава съществено ускоряване). Ако в директорията има дори един .bpnl
файл - ще се използват само тези файлове. В противен случай, трениране
или оценка ще се правят направо върху .log файловете.  При стартиране
на програмата автоматично се създава мрежа със следните
характеристики: 4 слоя - входен 262 неврона, скрит от 66 неврона,
скрит от 256 неврона и изходен от 1 неврон. Невроните от всички слоеве
без входния имат bias. Всички неврони имат сигмоидна функция за изход,
даваща резултат от -1 до 1. Изходът се скалира по 29744 (колкото е
максималната вътрешна оценка на Grapefruit). Скоростта на обучение е
0.35, ускорението 0.3.  Бутонът Save запазва текущата мрежа във файл,
който после може да бъде зареден през бутона Load. Структурата на тези
файлове описва напълно мрежата. 1-вият ред съдържа главните
характеристики, а следващите - тегла на отделните неврони. Числата от
1-вия ред задават съответно:
1) абсолютна стойност на интервала, от който ще се вземат случайни
   стойности за първоначално инициализиране на стойностите на теглата.
2) скорост на обучение
3) ускорение
4) константа за скалиране на изходите
5) общ брой слоеве (включително входен и изходен)
6) последователно изброяване на характеристики на отделните слоеве
   - брой неврони
   - наличие на bias, важи за всички неврони от слоя
   - константа на функция на изход за невроните от мрежата. Засега
     наличните функции са: 0 - линеен изход; 1 - сигмоидна функция в
     интервала 0 до 1; 2 - сигмоидна функция в интервала -1 до 1
7) ако редът завършва с "x" - се указва, че трябва да се направи
начално инициализиране на теглата (т.е. ако в следващите редове има
изброени тегла, няма да се вземат предвид). Това е начин за създаване
на нови мрежи с различна от подразбиращата се структура,
т.е. изброяват се съответните характеристики на 1-вия ред и се
завършва с "x" без нужда от по-нататъшно изброяване на тегла. Теглата
ще бъдат инициализирани след Load на съответния файл.
Бутонът Train задава обучение с обратно разпространение на грешката
върху Train directory, като всеки тренировъчен файл се обхожда Epochs
на брой пъти. С цел предпазване от непредвидими ситуации при дълго
обучение - след обхождане на всеки обучаващ файл, във файл bpn~ се
съхранява текущото състояние на мрежата като при грешка - мрежата се
възстановява иманно оттам.  Бутонът Test дава информация за точността
на текущата мрежа в/у Train directory - по-конкретно показва средна
грешка в/у всеки от файловете, както и обща средна грешка.

neuroGrape е модификация на Grapefruit, използваща за оценяваща
функция изхода на мрежа запазена чрез nTrain. Засега името на файла е
твърдо указано да е grape.bpn и трябва да се намира в директорията на
grapeFruit.

И 3-те програми са реализирани на C++ като nTrain е реализиран в/у Qt
(съответно за действието му е необходима Qt среда). Освен кодове на
програмите са приложени и изпълними файлове, които са компилирани на
x86-64 GNU/Linux (Fedora 10) с gcc4.3.2. Имайки предвид
многоплатформността на Qt (http://www.qtsoftware.com), както и
наличието на код на Grapefruit и за windows - всичко може сравнително
лесно да се прехвърли и под windows. Реализацията на мрежата с обратно
разпространение на грешката е относително независима от конкретното
приложение.

Съвети за игра под GNU/Linux: Примерен начин за игра с програмата е
използването на XBoard (http://www.tim-mann.org/xboard.html). В такъв
случай за "превод" на uci e необходим и Polyglot
(http://wbec-ridderkerk.nl/html/details1/PolyGlot.html). Приложени са
и примерни конфигурационни файлове (.ini) за Polyglot както и примерен
shell скрипт даващ възможност за лесно провеждане на турнири чрез
XBoard м/у няколко шахматни програми.

Андрей Котларски, m00naticus@gmail.com 17.III.2009
